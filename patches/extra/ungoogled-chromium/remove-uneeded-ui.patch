--- a/chrome/browser/resources/settings/privacy_page/personalization_options.html
+++ b/chrome/browser/resources/settings/privacy_page/personalization_options.html
@@ -35,7 +35,7 @@
         border-top: none;
       }
     </style>
-<if expr="not chromeos">
+<if expr="false">
     <settings-toggle-button id="signinAllowedToggle"
         class="hr"
         disabled="[[syncFirstSetupInProgress_]]"
@@ -52,6 +52,7 @@
         label="$i18n{searchSuggestPref}"
         sub-label="$i18n{searchSuggestPrefDesc}">
     </settings-toggle-button>
+<if expr="false">
   <template is="dom-if" if="[[!privacySettingsRedesignEnabled_]]">
     <settings-toggle-button id="linkDoctor" class="hr"
         pref="{{prefs.alternate_error_pages.enabled}}"
@@ -113,6 +114,7 @@
           on-close="onSignoutDialogClosed_">
       </settings-signout-dialog>
     </template>
+</if>
 
 <if expr="not chromeos">
     <cr-toast id="toast" open="[[showRestartToast_]]">
--- a/chrome/browser/resources/settings/printing_page/printing_page.html
+++ b/chrome/browser/resources/settings/printing_page/printing_page.html
@@ -6,6 +6,7 @@
         <cr-link-row label="$i18n{localPrintersTitle}"
             on-click="onTapLocalPrinters_" external></cr-link-row>
 </if>
+<if expr="false">
         <cr-link-row class="hr" id="cloudPrinters"
             label="$i18n{cloudPrintersTitle}" on-click="onTapCloudPrinters_"
             role-description="$i18n{subpageArrowRoleDescription}">
@@ -19,4 +20,5 @@
           </settings-cloud-printers>
         </settings-subpage>
       </template>
+</if>
     </settings-animated-pages>
--- a/chrome/browser/ui/views/profiles/profile_menu_view.cc
+++ b/chrome/browser/ui/views/profiles/profile_menu_view.cc
@@ -143,6 +143,7 @@
 }
 
 gfx::ImageSkia ProfileMenuView::GetSyncIcon() const {
+  return gfx::ImageSkia();
   Profile* profile = browser()->profile();
 
   if (!profile->IsRegularProfile())
@@ -410,7 +411,7 @@
     SetIdentityInfo(
         profile_attributes->GetAvatarIcon().AsImageSkia(),
         /*title=*/base::string16(),
-        l10n_util::GetStringUTF16(IDS_PROFILES_LOCAL_PROFILE_STATE));
+        base::string16());
   }
 }
 
@@ -482,6 +483,7 @@
     return;
   }
 
+  return;
   // Show sync promos.
   CoreAccountInfo unconsented_account = identity_manager->GetPrimaryAccountInfo(
       signin::ConsentLevel::kNotRequired);
--- a/chrome/browser/resources/settings/a11y_page/a11y_page.html
+++ b/chrome/browser/resources/settings/a11y_page/a11y_page.html
@@ -31,10 +31,6 @@
               sub-label="$i18n{captionsEnableLiveCaptionSubtitle}">
           </settings-toggle-button>
         </template>
-        <cr-link-row class="hr" label="$i18n{moreFeaturesLink}"
-            on-click="onMoreFeaturesLinkClick_" sub-label="$i18n{a11yWebStore}"
-            external>
-        </cr-link-row>
       </div>
 <if expr="not is_macosx and not chromeos">
       <template is="dom-if" route-path="/captions">
--- a/chrome/browser/resources/settings/languages_page/languages_page.html
+++ b/chrome/browser/resources/settings/languages_page/languages_page.html
@@ -208,10 +208,6 @@
               </a>
             </div>
           </div>
-          <settings-toggle-button id="offerTranslateOtherLanguages"
-              pref="{{prefs.translate.enabled}}"
-              label="$i18n{offerToEnableTranslate}">
-          </settings-toggle-button>
         </iron-collapse>
         <settings-toggle-button
             id="enableSpellcheckingToggle"
--- a/chrome/browser/resources/settings/privacy_page/passwords_leak_detection_toggle.html
+++ b/chrome/browser/resources/settings/privacy_page/passwords_leak_detection_toggle.html
@@ -6,6 +6,7 @@
           padding-inline-start: 0;
       }
     </style>
+<if expr="false">
     <settings-toggle-button id="passwordsLeakDetectionCheckbox" class="hr"
         pref="[[passwordsLeakDetectionPref_]]" no-set-pref
         label="$i18n{passwordsLeakDetectionLabel}"
@@ -16,3 +17,4 @@
             prefs.safebrowsing.enhanced.value)]]"
         on-settings-boolean-control-change="onPasswordsLeakDetectionChange_">
     </settings-toggle-button>
+</if>
# Removes the "Translate to" context menu only when --translate-script-url flag is not set
--- a/chrome/browser/renderer_context_menu/render_view_context_menu.cc
+++ b/chrome/browser/renderer_context_menu/render_view_context_menu.cc
@@ -116,6 +116,7 @@
 #include "components/spellcheck/common/spellcheck_common.h"
 #include "components/spellcheck/spellcheck_buildflags.h"
 #include "components/strings/grit/components_strings.h"
+#include "components/translate/core/common/translate_switches.h"
 #include "components/translate/core/browser/translate_download_manager.h"
 #include "components/translate/core/browser/translate_manager.h"
 #include "components/translate/core/browser/translate_prefs.h"
@@ -1570,7 +1571,8 @@
     std::unique_ptr<translate::TranslatePrefs> prefs(
         ChromeTranslateClient::CreateTranslatePrefs(
             GetPrefs(browser_context_)));
-    if (prefs->IsTranslateAllowedByPolicy()) {
+    const base::CommandLine& command_line = *base::CommandLine::ForCurrentProcess();
+    if (prefs->IsTranslateAllowedByPolicy() && command_line.HasSwitch(translate::switches::kTranslateScriptURL)) {
       language::LanguageModel* language_model =
           LanguageModelManagerFactory::GetForBrowserContext(browser_context_)
               ->GetPrimaryModel();
